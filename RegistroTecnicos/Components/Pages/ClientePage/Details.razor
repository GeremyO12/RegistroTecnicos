@page "/Cliente/Details"
@page "/Cliente/Details/{ClienteId:int}"
@inject ClienteService clienteService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles del Cliente</PageTitle>
@if (Clientes != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header  bg-primary text-white text-center py-2 rounded">
                <h3 class="text-center"><strong>Detalles del Cliente</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">

                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>ClienteId:</strong> @Clientes.ClienteId</li>
                                <li><strong>Nombre:</strong> @Clientes.Nombres</li>
                                <li><strong>Fecha de Ingreso:</strong> @Clientes.FechaIngreso</li>
                                <li><strong>Direccion:</strong> @Clientes.Direccion</li>
                                <li><strong>RNC:</strong> @Clientes.Rnc</li>
                                <li><strong>Limite de Credito:</strong> @Clientes.LimiteCredito</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
            </div>
        </div>
    </div>
}
else
{
    <p>Cliente no encontrado.</p>
}


@code {
    [Parameter]
    public int ClienteId { get; set; }
    public Clientes? Clientes { get; set; } = new Clientes();

    protected override async Task OnInitializedAsync()
    {
        Clientes = await clienteService.Buscar(ClienteId);
    }
    public void Volver()
    {
        navigationManager.NavigateTo("/Cliente/Index");
    }
}